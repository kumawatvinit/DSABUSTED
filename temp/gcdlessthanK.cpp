#include<bits/stdc++.h>
using namespace std;

class Solution {
    void print(vector<int> &ans)
    {
        cout << "Start: \n";
        
        for(auto &i: ans)
        {
            cout << i << " ";
        }
        cout << "End!\n";
    }
public:
    int maxCount(vector<int>& banned, int n, int maxSum) {
        int m = banned.size();
        vector<int> mp(n,-1);
        int sum = 0;
        int count = 0;
        
        
        for(int i=0; i<m; i++)
        {
            if(i<n)
            {
                int index = banned[i]-1;
                
                if(index<n) {
                    mp[index] = 0;
                }
                
            }
            
            
            if(mp[i] == -1)
            mp[i] = i+1;
        }
        for(int i=m; i<n; i++)
        {
            if(mp[i] == -1) {
                mp[i] = i+1;
            }
        }
        
        print(mp);
        cout << endl;
        
        
        for(auto &i: mp)
        {
            sum+= i;
            if(sum > maxSum) {
                return count++;
            }
            
            if(i != 0)
            count++;
        }
        
        
        return count;
    }
};

int main()
{
    // vector<int> banned{87,193,85,55,14,69,26,133,171,180,4,8,29,121,182,78,157,53,26,7,117,138,57,167,8,103,32,110,15,190,139,16,49,138,68,69,92,89,140,149,107,104,2,135,193,87,21,194,192,9,161,188,73,84,83,31,86,33,138,63,127,73,114,32,66,64,19,175,108,80,176,52,124,94,33,55,130,147,39,76,22,112,113,136,100,134,155,40,170,144,37,43,151,137,82,127,73};
    vector<int> banned{266,530,595,264,331,462,268,521,401,9,464,275,166,527,218,219,107,34,367,117,42,193,363,335,233,215,519,180,167,10,501,591,471,421,425,344,533,555,477,59,28,92,66,172,291,392,35,160,294,192,342,168,349,328,578,240,470,301,574,222,173,438,318,476,546,64,542,339,137,585,39,5,312,103,87,372,589,513,217,90,379,161,506,487,326,139,452,525,223,232,429,31,245,198,76,423,255,243,141,303,150,273,529,176,231,73,337,165,494,400,136,142,33,495,369,430,511,498,465,582,199,409,347,537,602,395,83,209,346,548,485,109,333,382,30,248,146,63,315,415,325,327,186,490,133,262,187,360,155,356,532,17,127,13,512,37,386,220,422,457,202,545,373,178,442,428,552,417,113,522,310,330,491,140,260,147,292,507,441,517,3,132,324,469,188,7,461,299,376,115,284,68,480,229,19,162,46,444,394,305,189,18,535,154,263,427,288,420,570,404,478,190,607,49,135,381,343,371,560,144,524,283,259,431,196,278,298,112,316,80,405,29,432,354,86,234,411,447,157,58,85,48,27,104,365,120,397,267,433,253,1,562,221,276,489,575,350,368,52,391,170,252,448,272,443,608,210,446,101,314,16,60,455,138,580,541,99,93,295,601,102,515,62,539,111,364,598,70,466,274,75,399,370,44,45,473,378,282,481,216,171,551,323,317};
    Solution obj;
    // cout << obj.maxCount(banned,1079,87);
    cout << obj.maxCount(banned,124,292541445);

    return 0;
}

/*
[266,530,595,264,331,462,268,521,401,9,464,275,166,527,218,219,107,34,367,117,42,193,363,335,233,215,519,180,167,10,501,591,471,421,425,344,533,555,477,59,28,92,66,172,291,392,35,160,294,192,342,168,349,328,578,240,470,301,574,222,173,438,318,476,546,64,542,339,137,585,39,5,312,103,87,372,589,513,217,90,379,161,506,487,326,139,452,525,223,232,429,31,245,198,76,423,255,243,141,303,150,273,529,176,231,73,337,165,494,400,136,142,33,495,369,430,511,498,465,582,199,409,347,537,602,395,83,209,346,548,485,109,333,382,30,248,146,63,315,415,325,327,186,490,133,262,187,360,155,356,532,17,127,13,512,37,386,220,422,457,202,545,373,178,442,428,552,417,113,522,310,330,491,140,260,147,292,507,441,517,3,132,324,469,188,7,461,299,376,115,284,68,480,229,19,162,46,444,394,305,189,18,535,154,263,427,288,420,570,404,478,190,607,49,135,381,343,371,560,144,524,283,259,431,196,278,298,112,316,80,405,29,432,354,86,234,411,447,157,58,85,48,27,104,365,120,397,267,433,253,1,562,221,276,489,575,350,368,52,391,170,252,448,272,443,608,210,446,101,314,16,60,455,138,580,541,99,93,295,601,102,515,62,539,111,364,598,70,466,274,75,399,370,44,45,473,378,282,481,216,171,551,323,317]
124
292541445
*/